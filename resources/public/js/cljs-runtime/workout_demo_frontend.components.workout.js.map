{"version":3,"sources":["workout_demo_frontend/components/workout.cljs"],"mappings":"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","names":["workout-demo-frontend.components.workout/workouts","reagent.core.atom","workout-demo-frontend.components.workout/selected-workout","workout-demo-frontend.components.workout/exercises","workout-demo-frontend.components.workout/expanded","workout-demo-frontend.components.workout/workout-types","workout-demo-frontend.components.workout/format-sets","sets","clojure.string.join","iter__5523__auto__","s__49926","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__49928","cljs.core/chunk-buffer","i__49927","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49925","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","set","workout-demo-frontend.components.workout/plus-sign","workout-demo-frontend.components.workout/x-sign","workout-demo-frontend.components.workout/fetch-workouts","day","month","year","p1__49929#","p1__49930#","ajax.core.GET","cljs.core.swap_BANG_","cljs.core/assoc","js/console.error","workout-demo-frontend.components.workout/fetch-exercises","cljs.core.println","p1__49931#","p1__49932#","cljs.core/reset!","workout-demo-frontend.components.workout/add-workout","workout","on-success","cljs.core._EQ_","js/alert","p1__49933#","ajax.core.POST","js/workout-demo-frontend","js/workout-demo-frontend.components","js/workout-demo-frontend.components.workout","js/workout-demo-frontend.components.workout.expanded-change-trigger","workout-demo-frontend.components.workout/expanded-change-trigger","co__27520__auto__","reagent.ratom.make_reaction","cljs.core/deref","workout-demo-frontend.components.workout/remove-at","v","i","cljs.core/vec","cljs.core.concat","cljs.core.subvec","p1__49934#","p1__49935#","workout-demo-frontend.components.workout/weight-reps-input","j","cljs.core/set","cljs.core/assoc-in","js/parseInt","workout-demo-frontend.components.workout/exercise-form","exercises-this-workout","current-expanded","current-selected","exercise-options","G__49938","cljs.core.doall","s__49940","b__49942","i__49941","vec__49943","cljs.core.nth","iter__49939","vec__49966","index","exercise","cljs.core.map_indexed","cljs.core/vector","current","p1__49936#","cljs.core.get_in","cljs.core.filter","option","s__49947","b__49949","i__49948","vec__49950","iter__49946","vec__49953","s__49970","b__49972","i__49971","vec__49973","iter__49969","vec__49976","s__49957","b__49959","i__49958","vec__49960","iter__49956","vec__49963","s__49980","b__49982","i__49981","vec__49983","iter__49979","vec__49986","exercise-name","exercise-data","p1__49937#","tracking-type","cljs.core/update-in","cljs.core/conj","cljs.core/update","workout-demo-frontend.components.workout/workout-form","close-fn","p1__49989#","cljs.core.keyword","s__49991","b__49993","i__49992","vec__49994","iter__49990","vec__49997","workout-type","workout-demo-frontend.components.workout/select-workout-from-day","s__50001","b__50003","i__50002","vec__50004","iter__50000","vec__50007","cljs.core.get","cljs.core/chunk-first"],"sourcesContent":["(ns workout-demo-frontend.components.workout\n    (:require [reagent.core :as r]\n              [clojure.string :as str]\n              [ajax.core :refer [GET POST]]\n              [reagent.ratom :as ratom]))\n\n(def workouts (r/atom nil))\n(def selected-workout (r/atom nil))\n\n(def exercises (r/atom nil))\n(def expanded (r/atom nil))\n(def workout-types [{:type :track :label \"Track\"} \n                    {:type :lifting :label \"Lifting\"}\n                    {:type :other :label \"Other\"}])\n\n(defn format-sets [sets]\n    (str/join \", \"\n        (for [set sets]\n            (str (:weight set) \"x\" (:reps set)))))\n\n(defn plus-sign []\n  [:svg {:xmlns \"http://www.w3.org/2000/svg\"\n         :viewBox \"0 0 24 24\"\n         :fill \"none\"\n         :stroke \"currentColor\"\n         :stroke-width \"2\"\n         :class \"w-6 h-6\"}\n   [:line {:x1 \"12\" :y1 \"5\" :x2 \"12\" :y2 \"19\" :stroke-linecap \"round\"}]\n   [:line {:x1 \"5\" :y1 \"12\" :x2 \"19\" :y2 \"12\" :stroke-linecap \"round\"}]])\n\n(defn x-sign []\n  [:svg {:xmlns \"http://www.w3.org/2000/svg\"\n         :viewBox \"0 0 24 24\"\n         :fill \"none\"\n         :stroke \"currentColor\"\n         :stroke-width \"2\"\n         :class \"w-6 h-6\"}\n   [:line {:x1 \"5\" :y1 \"5\" :x2 \"19\" :y2 \"19\" :stroke-linecap \"round\"}]\n   [:line {:x1 \"19\" :y1 \"5\" :x2 \"5\" :y2 \"19\" :stroke-linecap \"round\"}]])\n\n(defn fetch-workouts [day month year]\n  (GET \"http://localhost:3000/workouts\"\n       {:params {:day day :month month :year year}\n        :response-format :json\n        :keywords? true ;; Ensure response keys are keywordized\n        :handler #(swap! workouts assoc {:day day :month month :year year} (:workouts %)) ;; Callbacksa\n        :error-handler #(js/console.error \"Failed to fetch summary\" %)}))\n\n(defn fetch-exercises []\n    (println \"fetching exercises\")\n    (GET \"http://localhost:3000/exercises\"\n       {:response-format :json\n        :keywords? true ;; Ensure response keys are keywordized\n        :handler #(reset! exercises (:exercises %)) \n        :error-handler #(js/console.error \"Failed to fetch summary\" %)}))\n\n(defn add-workout [workout on-success]\n    (println \"workout \" workout)\n    (if (= 0 (count (:exercises workout))) \n        (js/alert \"Please add at least one exercise\")\n    (POST \"http://localhost:3000/workouts\"\n       {:params {:workout workout}\n        :response-format :json\n        :keywords? true ;; Ensure response keys are keywordized\n        :handler on-success ;; Callbacksa\n        :error-handler #(js/console.error \"Failed to add workout\" %)})))\n\n(defonce expanded-change-trigger \n  (ratom/run! ;; Analagous to useEffect in React - except we don't need to specify deps - r/run returns nil whereas reaction returns something\n    (println \"expanded \" @expanded)))\n\n(defn remove-at [v i]\n  (vec (concat (subvec v 0 i) (subvec v (inc i)))))\n\n(defn weight-reps-input [i j]\n[:div {:class \"flex flex-col gap-y-2 mt-2\"} ;; Styling for spacing\n\n[:div {:class \"flex items-center gap-x-2\"}\n                                    [:label {:class \"w-1/3\"} \"Weight:\"]\n                                    [:input {:type \"number\"\n                                             :class \"border p-2 rounded-md w-full\"\n                                             :value (:weight set) ;; Controlled input value\n                                             :on-change #(swap! selected-workout assoc-in [:exercises i :sets j :weight] \n                                                                (js/parseInt (.. % -target -value)))}]]\n                                   ;; Reps Input\n                                   [:div {:class \"flex items-center gap-x-2\"}\n                                    [:label {:class \"w-1/3\"} \"Reps:\"]\n                                    [:input {:type \"number\"\n                                             :class \"border p-2 rounded-md w-full\"\n                                             :value (:reps set) ;; Controlled input value\n                                             :on-change #(swap! selected-workout assoc-in [:exercises i :sets j :reps] \n                                                                (js/parseInt (.. % -target -value)))}]]])\n\n(defn exercise-form []\n    [:div \n                [:label {:class \"w-1/3\"} \"Exercises:\"]\n                (let [exercises-this-workout (:exercises @selected-workout)\n                      current-expanded @expanded\n                      current-selected (:type @selected-workout)\n                      exercise-options (current-selected @exercises)]\n                    (doall (for [[index exercise] (map-indexed vector exercises-this-workout)]\n                        ^{:key index}\n                        [:div {:class \"border-gray-200 bg-white rounded-md\"}\n                            [:div {:on-click #(swap! expanded (fn [current] (if (= index current) nil index)))}\n                                [:h2 {:class \"text-lg font-bold\"} (:name exercise)]]\n                            (when (= current-expanded index) \n                                [:div {:class \"flex flex-col gap-y-4 mt-2\"}\n                                [:select {:class \"border-gray-200 bg-white rounded-md\"\n                                    :value (get-in selected-workout [:exercises index :ident])\n                                    :default (first exercise-options)\n                                    :on-change #(swap! selected-workout assoc-in [:exercises index] (first (filter (fn [option] (= (:ident option) (.. % -target -value))) exercise-options)))}\n                                    (for [[index option] (map-indexed vector exercise-options)]\n                                        ^{:key index}\n                                        [:option {:value (:ident option)} (:name option)])]\n                                (for [[j set] (map-indexed vector (:sets exercise))]\n                                  ^{:key j}\n                                  [:div {:class \"flex items-center gap-x-2\"}\n                                    [:label {:class \"w-1/3\"} \"Set \" (inc j) \": \" (format-sets (:sets exercise))]\n                                  (let [exercise-name (get-in exercises-this-workout [index :name])\n                                        exercise-data (first (filter #(= exercise-name (:name %)) exercise-options))\n                                        tracking-type (:tracking-type exercise-data)]\n                                  (cond\n                                    (= j current-expanded) (cond \n                                        (= \"workout.exercise/weightxreps\" tracking-type) (weight-reps-input index j)\n                                        )))\n                                  [:button {:class \"flex items-center gap-2 p-2 hover:bg-gray-100 rounded-full bg-red-500 text-white\"\n                                          :on-click #(swap! selected-workout update-in [:exercises index :sets] (fn [sets] (remove-at sets j)))}\n                                      [x-sign]]])\n                                [:button {:class \"flex items-center gap-2 p-2 hover:bg-gray-100 border-gray-200 rounded-full w-1/4\"\n                                          :on-click #(swap! selected-workout update-in [:exercises index :sets] conj {:weight 0 :reps 0})}\n                                    [plus-sign]\n                                    \"Add Set\"]])]))\n                [:button {:class \"flex items-center gap-2 p-2 hover:bg-gray-100 rounded-full bg-blue-500 text-white\"\n                            :on-click #(swap! selected-workout update :exercises conj {:exercise (first exercise-options) :sets []})}\n                    [plus-sign]\n                    \"Add Exercise\"])]\n    )\n\n(defn workout-form [close-fn]\n    (if (nil? @selected-workout)\n        [:p \"Loading...\"]\n    [:div {:class \"flex flex-col gap-y-4\"}\n            [:div \n                [:label {:class \"w-1/3\"} \"Workout Type:\"]\n                [:select {:class \"border-gray-200 bg-white rounded-md\"\n                    :on-change #(swap! selected-workout assoc :type (keyword (.. % -target -value)))}\n                    (for [[index workout-type] (map-indexed vector workout-types)]  \n                        ^{:key (str index (:type workout-type))}\n                        [:option {:value (:type workout-type)} (:label workout-type)])]]\n            [exercise-form]\n            [:button {:class \"absolute bottom-0 p-2 hover:bg-green-300 text-white rounded-full\" :on-click #(add-workout @selected-workout close-fn)} \"Submit\"]]))\n\n(defn select-workout-from-day [day month year close-fn]\n    (when (nil? @workouts)\n        (println \"fetching workouts\")\n        (fetch-workouts day month year))\n    (when (nil? @exercises)\n        (println \"fetching exercises\")\n        (fetch-exercises))\n    [:div {:class \"relative p-4 bg-gray-50 min-h-screen\"} ;; Wrapper container\n        ;; X Button pinned to the top-right\n        [:button {:class \"absolute top-2 right-2 p-2 text-gray-500 hover:text-red-500\"\n                 :on-click close-fn}\n            [x-sign]]\n            (cond \n                (nil? @workouts) [:p \"Loading...\"]\n                :else (cond \n                    (nil? @selected-workout) [:div {:class \"grid grid-cols-1 items-center gap-y-4 mt-6\"}\n                        (for [[index workout] (map-indexed vector (get @workouts {:day day :month month :year year}))]\n                            ^{:key index}\n                            [:div {:class \"flex items-center gap-x-4\"\n                                :on-click #(reset! selected-workout workout)}\n                                [:h2 {:class \"text-lg font-bold\"} (:type workout)]])\n                        [:button {:class \"flex items-center gap-2 p-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition\"\n                                  :on-click #(reset! selected-workout {:id nil :exercises [] :type :lifting})}\n                            [plus-sign]\n                            \"Add Workout\"]]\n                    :else [workout-form @selected-workout close-fn]))])"]}